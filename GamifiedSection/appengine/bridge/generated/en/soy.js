// This file was automatically generated from template.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Bridge.soy.
 */

goog.provide('Bridge.soy');

goog.require('soy');
goog.require('soydata');
goog.require('BlocklyGames.soy');


Bridge.soy.messages = function(opt_data, opt_ignored, opt_ijData) {
  return BlocklyGames.soy.messages(null, null, opt_ijData) + '<div style="display: none"><span id="Bridge_moveForward">move forward</span><span id="Bridge_turnNorth">turn North</span><span id="Bridge_turnNorthEast">turn North-East</span><span id="Bridge_swimTooltip">Swim forward. Specify a direction (0-360).</span><span id="Bridge_diveTooltip">Dive into the river.</span><span id="Bridge_turnEast">turn East</span><span id="Bridge_turnSouthEast">turn South-East</span><span id="Bridge_turnSouth">turn South</span><span id="Bridge_turnSouthWest">turn South-West</span><span id="Bridge_turnWest">turn West</span><span id="Bridge_turnNorthWest">turn North-West</span><span id="Bridge_doCode">do</span><span id="Bridge_elseCode">else</span><span id="Bridge_helpIfElse">If-else blocks will do one thing or the other.</span><span id="Bridge_pathAhead">if path ahead</span><span id="Bridge_pathNorth">if path to the North</span><span id="Bridge_pathNorthEast">if path to the North-East</span><span id="Bridge_pathEast">if path to the East</span><span id="Bridge_pathSouthEast">if path to the South-East</span><span id="Bridge_pathSouth">if path to the South</span><span id="Bridge_pathSouthWest">if path to the South-West</span><span id="Bridge_pathWest">if path to the West</span><span id="Bridge_pathNorthWest">if path to the North-West</span><span id="Bridge_repeat">repeat</span><span id="Bridge_moveForwardTooltip">Moves the player forward one space.</span><span id="Bridge_turnTooltip">Turns the player in the direction as in a Compass.</span><span id="Bridge_ifTooltip">If there is a path in the specified direction, then do some actions.</span><span id="Bridge_ifelseTooltip">If River flow is in the specified direction, then do the first block of actions. Otherwise, do the second block of actions.</span><span id="Bridge_whileTooltip">Repeat the enclosed actions a specified number of times.</span><span id="Bridge_capacity0">You have %0 blocks left.</span><span id="Bridge_capacity1">You have %1 block left.</span><span id="Bridge_capacity2">You have %2 blocks left.</span><span id="Bridge_pathLeft">East to West</span><span id="Bridge_pathRight">West to East</span></div>';
};
if (goog.DEBUG) {
  Bridge.soy.messages.soyTemplateName = 'Bridge.soy.messages';
}


Bridge.soy.bridge = function(opt_data, opt_ignored, opt_ijData) {
  return '' + Bridge.soy.messages(null, null, opt_ijData) + BlocklyGames.soy.headerBar({appName: 'Bridge', levelLinkSuffix: 'skin=' + soy.$$escapeHtml(opt_ijData.skin), hasLinkButton: false, hasHelpButton: true, farLeftHtml: '<button id="pegmanButton" style="display :none"><img src="common/1x1.gif"><span id="pegmanButtonArrow"></span></button>'}, null, opt_ijData) + '<div id="visualization"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" id="svgBridge" width="1200px" height="1000px"><g id="look"><path d="M 0,-15 a 15 15 0 0 1 15 15" /><path d="M 0,-35 a 35 35 0 0 1 35 35" /><path d="M 0,-55 a 55 55 0 0 1 55 55" /></g></svg><div id="capacityBubble"><div id="capacity"></div></div><div id="dive" width="200" height="200" ><canvas id="finishanimation" width ="200" height ="200"></canvas></div></div><table id="buttontable" width="500px"><tr><td style="text-align : centre"><button id="runButton" class="primary"title="Makes the player do what the blocks say."><img src="common/1x1.gif" class="run icon21"> Run Program</button><button id="resetButton"  class="primary"title="Put the player back at the start of the level."><img src="common/1x1.gif" class="stop icon21"> Restart</button><button id="resetBridgeButton"  class="primary"title="Put the player back at the start of the broken bridge."><img src="common/1x1.gif" class="stop icon21"> Reset</button></td></tr></table>' + Bridge.soy.toolbox(null, null, opt_ijData) + '<div id="blockly"></div><div id="pegmanMenu"></div>' + BlocklyGames.soy.dialog(null, null, opt_ijData) + BlocklyGames.soy.doneDialog(null, null, opt_ijData) + BlocklyGames.soy.abortDialog(null, null, opt_ijData) + BlocklyGames.soy.storageDialog(null, null, opt_ijData) + '<div id="help" class="dialogHiddenContent"><div id="helptext" style="padding-bottom: 0.7ex">Alert : A block executed once will repeat it\'s execution if it\'s in workspace in next run. Remove the blocks whose execution is done. and insert again or if blocks can be used change values and use again.<br><br><br>Move to the bridge to cross the river.<br>If bridge is broken swim across the river using Dive and swim commands in order.</div>' + BlocklyGames.soy.ok(null, null, opt_ijData) + '</div><div id="Quiz" class="dialogHiddenContent"><div id="dialogLinesText1" style="font-size: large; margin: 1em;"></div><input type = "text" id="containerCode1"></input><br><br><div id="dialogDoneText1" style="font-size: large; margin: 1em;"></div><div id="dialogDoneButtons1" class="farSide" style="padding: 1ex 3ex 0"><button id="doneSubmit1">Submit</button><button id="doneOk1" class="secondary">OK</button></div></div>' + ((opt_ijData.level == 1) ? '<div id="dialogHelpStack" class="dialogHiddenContent"><table><tr><td><img src="common/help.png"></td><td>&nbsp;</td><td>Stack a couple of \'move forward\' blocks together to help me reach the goal.</td><td valign="top"><img src="bridge/help_stack.png" class="mirrorImg" height=63 width=136></td></tr></table></div><div id="dialogHelpOneTopBlock" class="dialogHiddenContent"><table><tr><td><img src="common/help.png"></td><td>&nbsp;</td><td>On this level, you need to stack together all of the blocks in the white workspace.<div id="sampleOneTopBlock" class="readonly"></div></td></tr></table></div><div id="dialogHelpRun" class="dialogHiddenContent"><table><tr><td>Run your program to see what happens.</td><td rowspan=2><img src="common/help.png"></td></tr><tr><td><div><img src="bridge/help_run.png" class="mirrorImg" height=27 width=141></div></td></tr></table></div>' : (opt_ijData.level == 2) ? '<div id="dialogHelpReset" class="dialogHiddenContent"><table><tr><td>Your program didn\'t solve the bridge. Press \'Reset\' and try again.</td><td rowspan=2><img src="common/help.png"></td></tr><tr><td><div><img src="bridge/help_run.png" class="mirrorImg" height=27 width=141></div></td></tr></table></div>' : (opt_ijData.level == 3 || opt_ijData.level == 4) ? ((opt_ijData.level == 3) ? '<div id="dialogHelpRepeat" class="dialogHiddenContent"><table><tr><td><img src="bridge/help_up.png"></td><td>Reach the end of this path using only two blocks. Use \'repeat\' to run a block more than once.</td><td><img src="common/help.png"></td></tr></table></div>' : '') + '<div id="dialogHelpCapacity" class="dialogHiddenContent"><table><tr><td><img src="common/help.png"></td><td>&nbsp;</td><td>You have used up all the blocks for this level. To create a new block, you first need to delete an existing block.</td></tr></table></div><div id="dialogHelpRepeatMany" class="dialogHiddenContent"><table><tr><td><img src="bridge/help_up.png"></td><td>You can fit more than one block inside a \'repeat\' block.</td><td><img src="common/help.png"></td></tr></table></div>' : (opt_ijData.level == 5) ? '<div id="dialogHelpSkins" class="dialogHiddenContent"><table><tr><td><img src="common/help.png"></td><td width="95%">Choose your favourite player from this menu.</td><td><img src="bridge/help_up.png"></td></tr></table></div>' : (opt_ijData.level == 6) ? '<div id="dialogHelpIf" class="dialogHiddenContent"><table><tr><td><img src="bridge/help_up.png"></td><td>An \'if\' block will do something only if the condition is true. Try turning left if there is a path to the left.</td><td><img src="common/help.png"></td></tr></table></div>' : (opt_ijData.level == 7) ? '<div id="dialogHelpMenu" class="dialogHiddenContent"><table><tr><td><img src="bridge/help_up.png"></td><td id="helpMenuText">Click on %1 in the \'if\' block to change its condition.</td><td><img src="common/help.png"></td></tr></table></div>' : (opt_ijData.level == 9) ? '<div id="dialogHelpIfElse" class="dialogHiddenContent"><table><tr><td><img src="bridge/help_down.png"></td><td>If-else blocks will do one thing or the other.</td><td><img src="common/help.png"></td></tr></table></div>' : (opt_ijData.level == 10) ? '<div id="dialogHelpWallFollow" class="dialogHiddenContent"><table><tr><td><img src="common/help.png"></td><td>&nbsp;</td><td>Can you solve this complicated bridge? Try following the left-hand wall. Advanced programmers only!' + BlocklyGames.soy.ok(null, null, opt_ijData) + '</td></tr></table></div>' : '');
};
if (goog.DEBUG) {
  Bridge.soy.bridge.soyTemplateName = 'Bridge.soy.bridge';
}


Bridge.soy.toolbox = function(opt_data, opt_ignored, opt_ijData) {
  return '<xml id="toolbox" xmlns="https://developers.google.com/blockly/xml"><category name="Bridge"><block type="bridge_moveForward"></block><block type="bridge_turn"><field name="DIR">turnNorth</field></block><block type="bridge_dive"></block><block type="bridge_swim"><value name="DEGREE"><shadow type="math_number"><mutation angle_field="true"></mutation><field name="NUM">0</field></shadow></value></block></category><category name="Loops"><block type="bridge_loop"><value name="times"><shadow type="math_number"><field name="NUM">2</field></shadow></value></block></category><category name="Logic"><block type="bridge_ifElse"></block></category></xml>';
};
if (goog.DEBUG) {
  Bridge.soy.toolbox.soyTemplateName = 'Bridge.soy.toolbox';
}
