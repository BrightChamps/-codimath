{namespace Circus.soy}

/**
 * This is a Closure Template.
 *
 * To regenerate just English, run:
 *   make circus-en
 *
 * To regenerate all languages, run:
 *   make languages
 */

/**
 * Translated messages for use in JavaScript.
 */
{template .messages}
  {call BlocklyGames.soy.messages /}
  <div style="display: none">
    // Block text and their associated tooltips and URLs (interleaved to
    // assist with translation).
    <span id="Circus_x">{msg meaning="Circus.x" desc="Label for an x-coordinate (horizontal) input."}x{/msg}</span>
    <span id="Circus_y">{msg meaning="Circus.y" desc="Label for a y-coordinate (vertical) input."}y{/msg}</span>
    <span id="Circus_x1">{msg meaning="Circus.x1" desc="Label for the x-coordinate of the start of a line."}start x{/msg}</span>
    <span id="Circus_y1">{msg meaning="Circus.y1" desc="Label for the y-coordinate of the start of a line"}start y{/msg}</span>
    <span id="Circus_x2">{msg meaning="Circus.x2" desc="Label for the x-coordinate of the end of a line."}end x{/msg}</span>
    <span id="Circus_y2">{msg meaning="Circus.y2" desc="Label for the y-coordinate of the end of a line."}end y{/msg}</span>
    <span id="Circus_x1">{msg meaning="Circus.X1" desc="Label for the x-coordinate of the start of a line."}x{/msg}</span>
    <span id="Circus_y1">{msg meaning="Circus.Y1" desc="Label for the y-coordinate of the start of a line"}y{/msg}</span>
    <span id="Circus_x2">{msg meaning="Circus.X2" desc="Label for the x-coordinate of the end of a line."}x{/msg}</span>
    <span id="Circus_y2">{msg meaning="Circus.Y2" desc="Label for the y-coordinate of the end of a line."}y{/msg}</span>
    <span id="Circus_X1">{msg meaning="Circus.X1" desc="Label for the x-coordinate of the start of a line."}X1{/msg}</span>
    <span id="Circus_X2">{msg meaning="Circus.X2" desc="Label for the x-coordinate of the start of a line."}X2{/msg}</span>
    <span id="Circus_Y1">{msg meaning="Circus.Y1" desc="Label for the x-coordinate of the start of a line."}Y1{/msg}</span>
    <span id="Circus_Y2">{msg meaning="Circus.Y2" desc="Label for the x-coordinate of the start of a line."}Y2{/msg}</span>

    <span id="Circus_radius">{{msg meaning="Circus.radius" desc="Label for a circle's radius input.\n{lb}{lb}Identical|Radius{rb}{rb}"}}radius{{/msg}}</span>
    <span id="Circus_width">{{msg meaning="Circus.width" desc="Label for a circle or line's width input.\n{lb}{lb}Identical|Width{rb}{rb}"}}width{{/msg}}</span>
    <span id="Circus_length">{{msg meaning="Circus.length" desc="Label for a line's length input.\n{lb}{lb}Identical|Width{rb}{rb}"}}length{{/msg}}</span>
    <span id="Circus_height">{{msg meaning="Circus.height" desc="Label for a rectangle's height input.\n{lb}{lb}Identical|Height{rb}{rb}"}}height{{/msg}}</span>
    <span id="Circus_circleTooltip">{msg meaning="Circus.circleTooltip" desc="tooltip"}Draws a circle at the specified location and with the specified radius.{/msg}</span>
    <span id="Circus_midpointTooltip">{msg meaning="Circus.circleTooltip" desc="tooltip"}Returns the value of Mid point of two points.{/msg}</span>
    <span id="Circus_radiusTooltip">{msg meaning="Circus.circleTooltip" desc="tooltip"}Finds out the radius of the circle with given centre and point on circumference.{/msg}</span>
    <span id="Circus_circleDraw">{{msg meaning="Circus.circleDraw" desc="Command to draw a circle.\n{lb}{lb}Identical|Circle{rb}{rb}"}}circle{{/msg}}</span>
    <span id="Circus_lineTooltip">{msg meaning="Circus.lineTooltip" desc="tooltip"}Draws a line from one point to another with the specified width.{/msg}</span>
    <span id="Circus_perpendicularTooltip">{msg meaning="Circus.lineTooltip" desc="tooltip"}Draws a line at start x, start y perpendicular to line given by end x end y with given length(can be negative).{/msg}</span>
    <span id="Circus_lineDraw">{{msg meaning="Circus.lineDraw" desc="Command to draw a rectangle.\n{lb}{lb}Identical|Line{rb}{rb}"}}line{{/msg}}</span>
    <span id="Circus_midpoint">{{msg meaning="Circus.lineDraw" desc="Command to draw a rectangle.\n{lb}{lb}Identical|Line{rb}{rb}"}}Mid Point of{{/msg}}</span>
    <span id="Circus_radiusfunction">{{msg meaning="Circus.lineDraw" desc="Command to draw a rectangle.\n{lb}{lb}Identical|Line{rb}{rb}"}}Radius{{/msg}}</span>
    <span id="Circus_perpendicularlineDraw">{{msg meaning="Circus.perpendicularlineDraw" desc="Command to draw a rectangle.\n{lb}{lb}Identical|Line{rb}{rb}"}}Perpendicular line at{{/msg}}</span>
    <span id="Circus_perpendiculartoline">{{msg meaning="Circus.perpendiculartoline" desc="Command to draw a rectangle.\n{lb}{lb}Identical|Line{rb}{rb}"}}Perpendicular to line{{/msg}}</span>

    <span id="Circus_timeTooltip">{msg meaning="Circus.timeTooltip" desc="tooltip"}Returns the current time in the animation (0-100).{/msg}</span>

    <span id="Circus_colourTooltip">{msg meaning="Circus.colourTooltip" desc="tooltip - Changes the colour of ink in the pen carried by the turtle."}Changes the colour of the pen.{/msg}</span>
    <span id="Circus_setColour">{msg meaning="Circus.setColour" desc="block text - Infinitive or imperative of a verb to specify the colour of the lines that should be drawn in the future by an imaginary pen.  This is followed by a block showing the colour"}set colour to{/msg}</span>

    <span id="Circus_submitDisabled">{msg meaning="Circus.submitDisabled" desc="Error message."}Your movie doesn't move. Use blocks to make something interesting. Then you may submit your movie to the gallery.{/msg}</span>
  </div>
{/template}

/**
 * Web page structure.
 */
{template .start}
  {call .messages /}
  {call BlocklyGames.soy.headerBar}
    {param appName}
      {msg meaning="Games.circus" desc="IBID"}Circus{/msg}
    {/param}
    {param levelLinkSuffix}{/param}
    {param hasLinkButton: true /}
    {param hasHelpButton: false /}
    {param farLeftHtml}{/param}
  {/call}

  <div id="visualization" display = "none">
    <div id="coordinates">
      <span id="x"></span>
      <span id="y"></span>
    </div>
    <div id="functionvalue" style="display : none">
      <span id="returnvalue"></span>
    </div>
    <div id="rider" width="115" height="260">
    <canvas id="ridercanvas" width="115" height="260"></canvas>
    </div>
    <canvas id="scratch" width="1200px" height="1000px " style="display: none"></canvas>
    <canvas id="hatching" width="1200px" height="1000px" style="display: none"></canvas>
    <canvas id="axies" width="1200px" height="1000px" style="display: none" dir="ltr"></canvas>
    <canvas id="display" width="1200px" height="1000px" style="vertical-align: bottom"></canvas>
    <div id="support1div" width="30" height="30">
    <canvas id="support1" width="30" height="30"  ></canvas>
    </div>
    <div id="support2div" width="30" height="30">
    <canvas id="support2" width="30" height="30"  ></canvas>
    </div>
    <div id="support3div" width="30" height="30">
    <canvas id="support3" width="30" height="30"  ></canvas>
    </div>
    <div id="support4div" width="30" height="30">
    <canvas id="support4" width="30" height="30"  ></canvas>
    </div>
    <div id="support5div" width="30" height="30">
    <canvas id="support5" width="30" height="30"  ></canvas>
    </div>
  </div>

  <div id = "Container" >
    <div class="quizContainer">
      <div id ="quiz">
      <h2 id="question"></h2>
      <div class="choice-container">
        <p class="choice-prefix">A</p>
        <p class="choice-text" data-number="1"></p>
      </div>
      <div class="choice-container">
        <p class="choice-prefix">B</p>
        <p class="choice-text" data-number="2"></p>
      </div>
      <div class="choice-container">
        <p class="choice-prefix">C</p>
        <p class="choice-text" data-number="3"></p>
      </div>
      <div class="choice-container">
        <p class="choice-prefix">D</p>
        <p class="choice-text" data-number="4"></p>
      </div>
      </div>
    </div>
    <button id="previous" stye= "display:none">Previous Question</button>
    <button id="next">Skip Question</button>
    <button id="submit">Submit Quiz</button>
  </div>


  {call .toolbox /}
  <div id="blockly"></div>

  {call BlocklyGames.soy.dialog /}
  {call BlocklyGames.soy.doneDialog /}
  {call BlocklyGames.soy.abortDialog /}
  {call BlocklyGames.soy.storageDialog /}

  {if $ij.level == 9}
    <div id="helpLayer" class="dialogHiddenContent">
      <div style="padding-bottom: 0.7ex">
        {msg meaning="Circus.helpLayer" desc="Dialog telling user to change the order of their program."}
          Move the background circle to the top of your program.  Then it will appear behind the person.
        {/msg}
      </div>
      {call BlocklyGames.soy.ok /}
    </div>
  {/if}

  <div id="help" class="dialogHiddenContent">
    <div style="padding-bottom: 0.7ex">
      {if $ij.level == 1}
        {msg meaning="Circus.helpText1" desc="Instructions."}
          Use Line and perpendicular line blocks to :
          <br>
          Find the circumcentre of the triangle formed with various combinations of supports named A, B, C, D, E use the inner points of every support example : Bottom left corner of support B
          <br>
          Important : Once you have calculated the circumcentre and radius of Circum Circle, remove all the blocks and draw a circle corresponding to radius and centre found with width = 2.
        {/msg}
      {elseif $ij.level == 2}
        {msg meaning="Circus.helpText2a" desc="Instructions.  The play button looks like the video play button on YouTube."}
          This level is a Circus. You want the person's arm to move across the screen. Press the play button to see a preview.
        {/msg}
        <div id="sampleHelp2" class="readonly"></div>
        {msg meaning="Circus.helpText2b" desc="Instructions.  Do not translate the word 'time' or the name 'y'."}
          As the movie plays, the value of the 'time' block counts from 0 to 100. Since you want the 'y' position of the arm to start at 0 and go to 100 this should be easy.
        {/msg}
      {elseif $ij.level == 3}
        {msg meaning="Circus.helpText3" desc="Instructions.  Do not translate the word 'time' or the name 'y'."}
          The 'time' block counts from 0 to 100. But now you want the 'y' position of the other arm to start at 100 and go to 0. Can you figure out a simple mathematical formula that flips the direction?
        {/msg}
      {elseif $ij.level == 4}
        {msg meaning="Circus.helpText4" desc="Instructions."}
          Use what you learned in the previous level to make legs that cross.
        {/msg}
      {elseif $ij.level == 5}
        {msg meaning="Circus.helpText5" desc="Instructions."}
          The mathematical formula for the arm is complicated. Here's the answer:
        {/msg}
        <br><br>
        <code class="ltr">y = ((time - 50) &divide; 5) ^ 2</code>
        <code class="rtl">&lrm;2 ^ (5 &divide; (50 - time)) = y&lrm;</code>
      {elseif $ij.level == 6}
        {msg meaning="Circus.helpText6" desc="Instructions.  Drawing hands on a picture of a person."}
          Give the person a couple of hands.
        {/msg}
      {elseif $ij.level == 7}
        {msg meaning="Circus.helpText7" desc="Instructions.  Do translate the word 'if'."}
          Use the 'if' block to draw a small head for the first half of the Circus. Then draw a big head for the second half of the Circus.
        {/msg}
      {elseif $ij.level == 8}
        {msg meaning="Circus.helpText8" desc="Instructions."}
          Make the legs reverse direction half way through the Circus.
        {/msg}
      {elseif $ij.level == 9}
        {msg meaning="Circus.helpText9" desc="Instructions."}
          Draw an expanding circle behind the person.
        {/msg}
      {elseif $ij.level == 10}
        {msg meaning="Circus.helpText10" desc="Instructions."}
          Make a movie of anything you want. You've got a huge number of new blocks you can explore. Have fun!
        {/msg}
        {if not $ij.html}
          <br><br>
          {msg meaning="Circus.helpText10Reddit" desc="Instructions on publishing your Circus."}
            Use the "See Gallery" button to see movies that other people have made. If you make an interesting movie, use the "Submit to Gallery" button to publish it.
          {/msg}
        {/if}
      {/if}
    </div>
    {call BlocklyGames.soy.ok /}
  </div>
{/template}

/**
 * Toolbox.
 */
{template .toolbox}
  <xml id="toolbox" xmlns="https://developers.google.com/blockly/xml">
    <category name="{msg meaning="Games.circus" desc="IBID"}Circus{/msg}">
      <block type="circus_circle">
        <value name="X">
          <shadow type="math_number">
            <field name="NUM">50</field>
          </shadow>
        </value>
        <value name="Y">
          <shadow type="math_number">
            <field name="NUM">50</field>
          </shadow>
        </value>
        <value name="RADIUS">
          <shadow type="math_number">
            <field name="NUM">10</field>
          </shadow>
        </value>
        <value name="WIDTH">
          <shadow type="math_number">
            <field name="NUM">1</field>
          </shadow>
        </value>
      </block>
      <block type="circus_line">
        <value name="X1">
          <shadow type="math_number">
            <field name="NUM">40</field>
          </shadow>
        </value>
        <value name="Y1">
          <shadow type="math_number">
            <field name="NUM">40</field>
          </shadow>
        </value>
        <value name="X2">
          <shadow type="math_number">
            <field name="NUM">60</field>
          </shadow>
        </value>
        <value name="Y2">
          <shadow type="math_number">
            <field name="NUM">60</field>
          </shadow>
        </value>
        <value name="WIDTH">
          <shadow type="math_number">
            <field name="NUM">1</field>
          </shadow>
        </value>
      </block>
      <block type="circus_midpoint">
        <value name="X1">
          <shadow type="math_number">
            <field name="NUM">40</field>
          </shadow>
        </value>
        <value name="Y1">
          <shadow type="math_number">
            <field name="NUM">40</field>
          </shadow>
        </value>
        <value name="X2">
          <shadow type="math_number">
            <field name="NUM">60</field>
          </shadow>
        </value>
        <value name="Y2">
          <shadow type="math_number">
            <field name="NUM">60</field>
          </shadow>
        </value>
      </block>
      <block type="circus_radius">
        <value name="X1">
          <shadow type="math_number">
            <field name="NUM">40</field>
          </shadow>
        </value>
        <value name="Y1">
          <shadow type="math_number">
            <field name="NUM">40</field>
          </shadow>
        </value>
        <value name="X2">
          <shadow type="math_number">
            <field name="NUM">60</field>
          </shadow>
        </value>
        <value name="Y2">
          <shadow type="math_number">
            <field name="NUM">60</field>
          </shadow>
        </value>
      </block>
      <block type="circus_perpendicularline">
        <value name="X1">
          <shadow type="math_number">
            <field name="NUM">40</field>
          </shadow>
        </value>
        <value name="Y1">
          <shadow type="math_number">
            <field name="NUM">40</field>
          </shadow>
        </value>
        <value name="X2">
          <shadow type="math_number">
            <field name="NUM">60</field>
          </shadow>
        </value>
        <value name="Y2">
          <shadow type="math_number">
            <field name="NUM">60</field>
          </shadow>
        </value>
        <value name="WIDTH">
          <shadow type="math_number">
            <field name="NUM">1</field>
          </shadow>
        </value>
        <value name="LENGTH">
          <shadow type="math_number">
            <field name="NUM">20</field>
          </shadow>
        </value>
      </block>
      {if $ij.level > 1}
        <block type="circus_time"></block>
      {/if}
    </category>
    <category name="{msg meaning="Games.catColour" desc="IBID"}Colour{/msg}">
      <block type="circus_colour">
        <value name="COLOUR">
          <shadow type="colour_picker"></shadow>
        </value>
      </block>
    </category>

  </xml>
{/template}
