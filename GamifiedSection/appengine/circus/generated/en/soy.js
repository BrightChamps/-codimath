// This file was automatically generated from template.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace Circus.soy.
 */

goog.provide('Circus.soy');

goog.require('soy');
goog.require('soydata');
goog.require('BlocklyGames.soy');


Circus.soy.messages = function(opt_data, opt_ignored, opt_ijData) {
  return BlocklyGames.soy.messages(null, null, opt_ijData) + '<div style="display: none"><span id="Circus_x">x</span><span id="Circus_y">y</span><span id="Circus_x1">start x</span><span id="Circus_y1">start y</span><span id="Circus_x2">end x</span><span id="Circus_y2">end y</span><span id="Circus_x1">x</span><span id="Circus_y1">y</span><span id="Circus_x2">x</span><span id="Circus_y2">y</span><span id="Circus_X1">X1</span><span id="Circus_X2">X2</span><span id="Circus_Y1">Y1</span><span id="Circus_Y2">Y2</span><span id="Circus_radius">radius</span><span id="Circus_width">width</span><span id="Circus_length">length</span><span id="Circus_height">height</span><span id="Circus_circleTooltip">Draws a circle at the specified location and with the specified radius.</span><span id="Circus_midpointTooltip">Returns the value of Mid point of two points.</span><span id="Circus_radiusTooltip">Finds out the radius of the circle with given centre and point on circumference.</span><span id="Circus_circleDraw">circle</span><span id="Circus_lineTooltip">Draws a line from one point to another with the specified width.</span><span id="Circus_perpendicularTooltip">Draws a line at start x, start y perpendicular to line given by end x end y with given length(can be negative).</span><span id="Circus_lineDraw">line</span><span id="Circus_midpoint">Mid Point of</span><span id="Circus_radiusfunction">Radius</span><span id="Circus_perpendicularlineDraw">Perpendicular line at</span><span id="Circus_perpendiculartoline">Perpendicular to line</span><span id="Circus_timeTooltip">Returns the current time in the animation (0-100).</span><span id="Circus_colourTooltip">Changes the colour of the pen.</span><span id="Circus_setColour">set colour to</span><span id="Circus_submitDisabled">Your movie doesn\'t move. Use blocks to make something interesting. Then you may submit your movie to the gallery.</span></div>';
};
if (goog.DEBUG) {
  Circus.soy.messages.soyTemplateName = 'Circus.soy.messages';
}


Circus.soy.start = function(opt_data, opt_ignored, opt_ijData) {
  return '' + Circus.soy.messages(null, null, opt_ijData) + BlocklyGames.soy.headerBar({appName: 'Circus', levelLinkSuffix: '', hasLinkButton: true, hasHelpButton: false, farLeftHtml: ''}, null, opt_ijData) + '<div id="visualization" display = "none"><div id="coordinates"><span id="x"></span><span id="y"></span></div><div id="functionvalue" style="display : none"><span id="returnvalue"></span></div><div id="rider" width="115" height="260"><canvas id="ridercanvas" width="115" height="260"></canvas></div><canvas id="scratch" width="1200px" height="1000px " style="display: none"></canvas><canvas id="hatching" width="1200px" height="1000px" style="display: none"></canvas><canvas id="axies" width="1200px" height="1000px" style="display: none" dir="ltr"></canvas><canvas id="display" width="1200px" height="1000px" style="vertical-align: bottom"></canvas><div id="support1div" width="30" height="30"><canvas id="support1" width="30" height="30"  ></canvas></div><div id="support2div" width="30" height="30"><canvas id="support2" width="30" height="30"  ></canvas></div><div id="support3div" width="30" height="30"><canvas id="support3" width="30" height="30"  ></canvas></div><div id="support4div" width="30" height="30"><canvas id="support4" width="30" height="30"  ></canvas></div><div id="support5div" width="30" height="30"><canvas id="support5" width="30" height="30"  ></canvas></div></div><div id = "Container" ><div class="quizContainer"><div id ="quiz"><h2 id="question"></h2><div class="choice-container"><p class="choice-prefix">A</p><p class="choice-text" data-number="1"></p></div><div class="choice-container"><p class="choice-prefix">B</p><p class="choice-text" data-number="2"></p></div><div class="choice-container"><p class="choice-prefix">C</p><p class="choice-text" data-number="3"></p></div><div class="choice-container"><p class="choice-prefix">D</p><p class="choice-text" data-number="4"></p></div></div></div><button id="previous" stye= "display:none">Previous Question</button><button id="next">Skip Question</button><button id="submit">Submit Quiz</button></div>' + Circus.soy.toolbox(null, null, opt_ijData) + '<div id="blockly"></div>' + BlocklyGames.soy.dialog(null, null, opt_ijData) + BlocklyGames.soy.doneDialog(null, null, opt_ijData) + BlocklyGames.soy.abortDialog(null, null, opt_ijData) + BlocklyGames.soy.storageDialog(null, null, opt_ijData) + ((opt_ijData.level == 9) ? '<div id="helpLayer" class="dialogHiddenContent"><div style="padding-bottom: 0.7ex">Move the background circle to the top of your program.  Then it will appear behind the person.</div>' + BlocklyGames.soy.ok(null, null, opt_ijData) + '</div>' : '') + '<div id="help" class="dialogHiddenContent"><div style="padding-bottom: 0.7ex" style="font-size:150%;">' + ((opt_ijData.level == 1) ? 'Unfortunately the ring used by rider is broken and you have to help him build it with the help of these supports : A, B, C, D and E.<br><br>Find the circumcentre of the triangle formed with various combinations of supports named A, B, C, D, E use the inner points of every support example : Bottom left corner of support B<br><br><br>Important : Once you have calculated the circumcentre and radius of Circum Circle, clear the workspace by deleting all blocks and draw a circle corresponding to radius and centre found with width = 2.<br><br>(Quick Tip: Use coordinate of inner points of supports to draw the triangle and with the help of various blocks provided drawing ring will be easy task!!)' : (opt_ijData.level == 2) ? 'This level is a Circus. You want the person\'s arm to move across the screen. Press the play button to see a preview.<div id="sampleHelp2" class="readonly"></div>As the movie plays, the value of the \'time\' block counts from 0 to 100. Since you want the \'y\' position of the arm to start at 0 and go to 100 this should be easy.' : (opt_ijData.level == 3) ? 'The \'time\' block counts from 0 to 100. But now you want the \'y\' position of the other arm to start at 100 and go to 0. Can you figure out a simple mathematical formula that flips the direction?' : (opt_ijData.level == 4) ? 'Use what you learned in the previous level to make legs that cross.' : (opt_ijData.level == 5) ? 'The mathematical formula for the arm is complicated. Here\'s the answer:<br><br><code class="ltr">y = ((time - 50) &divide; 5) ^ 2</code><code class="rtl">&lrm;2 ^ (5 &divide; (50 - time)) = y&lrm;</code>' : (opt_ijData.level == 6) ? 'Give the person a couple of hands.' : (opt_ijData.level == 7) ? 'Use the \'if\' block to draw a small head for the first half of the Circus. Then draw a big head for the second half of the Circus.' : (opt_ijData.level == 8) ? 'Make the legs reverse direction half way through the Circus.' : (opt_ijData.level == 9) ? 'Draw an expanding circle behind the person.' : (opt_ijData.level == 10) ? 'Make a movie of anything you want. You\'ve got a huge number of new blocks you can explore. Have fun!' + ((! opt_ijData.html) ? '<br><br>Use the "See Gallery" button to see movies that other people have made. If you make an interesting movie, use the "Submit to Gallery" button to publish it.' : '') : '') + '</div>' + BlocklyGames.soy.ok(null, null, opt_ijData) + '</div>';
};
if (goog.DEBUG) {
  Circus.soy.start.soyTemplateName = 'Circus.soy.start';
}


Circus.soy.toolbox = function(opt_data, opt_ignored, opt_ijData) {
  return '<xml id="toolbox" xmlns="https://developers.google.com/blockly/xml"><category name="Circus"><block type="circus_circle"><value name="X"><shadow type="math_number"><field name="NUM">50</field></shadow></value><value name="Y"><shadow type="math_number"><field name="NUM">50</field></shadow></value><value name="RADIUS"><shadow type="math_number"><field name="NUM">10</field></shadow></value><value name="WIDTH"><shadow type="math_number"><field name="NUM">1</field></shadow></value></block><block type="circus_line"><value name="X1"><shadow type="math_number"><field name="NUM">40</field></shadow></value><value name="Y1"><shadow type="math_number"><field name="NUM">40</field></shadow></value><value name="X2"><shadow type="math_number"><field name="NUM">60</field></shadow></value><value name="Y2"><shadow type="math_number"><field name="NUM">60</field></shadow></value><value name="WIDTH"><shadow type="math_number"><field name="NUM">1</field></shadow></value></block><block type="circus_midpoint"><value name="X1"><shadow type="math_number"><field name="NUM">40</field></shadow></value><value name="Y1"><shadow type="math_number"><field name="NUM">40</field></shadow></value><value name="X2"><shadow type="math_number"><field name="NUM">60</field></shadow></value><value name="Y2"><shadow type="math_number"><field name="NUM">60</field></shadow></value></block><block type="circus_radius"><value name="X1"><shadow type="math_number"><field name="NUM">40</field></shadow></value><value name="Y1"><shadow type="math_number"><field name="NUM">40</field></shadow></value><value name="X2"><shadow type="math_number"><field name="NUM">60</field></shadow></value><value name="Y2"><shadow type="math_number"><field name="NUM">60</field></shadow></value></block><block type="circus_perpendicularline"><value name="X1"><shadow type="math_number"><field name="NUM">40</field></shadow></value><value name="Y1"><shadow type="math_number"><field name="NUM">40</field></shadow></value><value name="X2"><shadow type="math_number"><field name="NUM">60</field></shadow></value><value name="Y2"><shadow type="math_number"><field name="NUM">60</field></shadow></value><value name="WIDTH"><shadow type="math_number"><field name="NUM">1</field></shadow></value><value name="LENGTH"><shadow type="math_number"><field name="NUM">20</field></shadow></value></block>' + ((opt_ijData.level > 1) ? '<block type="circus_time"></block>' : '') + '</category><category name="Colour"><block type="circus_colour"><value name="COLOUR"><shadow type="colour_picker"></shadow></value></block></category></xml>';
};
if (goog.DEBUG) {
  Circus.soy.toolbox.soyTemplateName = 'Circus.soy.toolbox';
}
